# Generated by Django 5.0.6 on 2024-05-09 12:42

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="MetaMeasurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("base_quantity", models.CharField(max_length=100)),
                ("selling_price", models.CharField(max_length=100)),
                ("full_name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("business_name", models.CharField(max_length=100)),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("sku", models.CharField(blank=True, max_length=100, null=True)),
                ("cost_price", models.CharField(blank=True, max_length=100, null=True)),
                ("stock_unit", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "unit_measurement",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "unit_increment",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("selling_price", models.FloatField(default=0.0)),
                ("quantity", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "meta_measurement",
                    models.ManyToManyField(to="product.metameasurement"),
                ),
            ],
        ),
    ]
